name: Publish On Tag

on: push

jobs:
  initial-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Only allow tags on main to be published
        if: github.ref_name != 'main'
        run: exit 1

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: Run tests for Python ${{ matrix.python-version }} on ${{ matrix.os }}
        run: |
          pip install -e .
          python -m unittest tests/test_footprint.py
  publish:
    needs: [initial-checks, test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools wheel twine
      - name: Get module version
        id: get_module_version
        shell: bash
        run: |
          version=$(python -c "from footprint import __version__ as v; print(v)")
          echo "Module version: $version"
          echo "::set-output name=version::$version"
      - name: Fail on tag and module version mismatch
        if: (!endsWith(github.ref, steps.get_module_version.outputs.version))
        run: |
          echo "Ref that triggered release: ${{ github.ref }}"
          echo "Current module version: ${{ steps.get_module_version.outputs.version }}"
          exit 1
      - name: Build distribution
        run: |
          python setup.py sdist bdist_wheel --universal
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_module_version.outputs.version }}
          release_name: v${{ steps.get_module_version.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ steps.get_documented_changes.outputs.changes }}

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/footprint-py-${{ steps.get_module_version.outputs.version }}-py2.py3-none-any.whl
          asset_name: footprint-py-${{ steps.get_module_version.outputs.version }}-py2.py3-none-any.whl
          asset_content_type: application/x-wheel+zip